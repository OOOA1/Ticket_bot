import os

from .utils import admin_error_catcher, awaiting_invite_count
from database import get_admins
from admin_panel.invite_admin import generate_invites, export_invites_xlsx

def register_invites_handlers(bot):
    @bot.message_handler(commands=['gen_invites'])
    @admin_error_catcher(bot)
    def ask_invite_count(message):
        ADMINS = get_admins()
        if message.from_user.id not in ADMINS:
            return
        bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å?")
        awaiting_invite_count[message.from_user.id] = True

    @bot.message_handler(func=lambda m: awaiting_invite_count.get(m.from_user.id))
    @admin_error_catcher(bot)
    def generate_and_send_invites(message):
        ADMINS = get_admins()
        if message.from_user.id not in ADMINS:
            return

        try:
            count = int(message.text)
            if not (1 <= count <= 5000):
                bot.send_message(message.chat.id, "–ú–æ–∂–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç 1 –¥–æ 5000 –∫–æ–¥–æ–≤ –∑–∞ —Ä–∞–∑.")
                return
        except ValueError:
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ ‚Äî —Å–∫–æ–ª—å–∫–æ –∫–æ–¥–æ–≤ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.")
            return

        awaiting_invite_count.pop(message.from_user.id, None)

        codes = generate_invites(count)
        temp_path = export_invites_xlsx(codes)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä—É
        with open(temp_path, "rb") as doc:
            bot.send_document(message.chat.id, doc, caption=f"–ì–æ—Ç–æ–≤–æ! {count} –∏–Ω–≤–∞–π—Ç–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ.")
        os.remove(temp_path)

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
        for admin_id in ADMINS:
            if admin_id != message.from_user.id:
                bot.send_message(
                    admin_id,
                    f"üîë @{message.from_user.username} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª {count} –Ω–æ–≤—ã—Ö invite-–∫–æ–¥–æ–≤."
                )
